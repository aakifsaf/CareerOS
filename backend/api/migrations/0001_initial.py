# Generated by Django 5.2 on 2025-05-07 07:02

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Career",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "automation_risk",
                    models.FloatField(
                        default=0.0,
                        help_text="Estimated risk of automation (0.0 to 1.0)",
                    ),
                ),
                (
                    "market_demand",
                    models.IntegerField(
                        default=0,
                        help_text="Current market demand score (e.g., 1-10 or job openings)",
                    ),
                ),
                (
                    "future_trend",
                    models.CharField(
                        choices=[
                            ("rising", "Rising"),
                            ("stable", "Stable"),
                            ("declining", "Declining"),
                        ],
                        default="stable",
                        max_length=10,
                    ),
                ),
                (
                    "suggested_skills_text",
                    models.TextField(
                        blank=True, help_text="Comma-separated list of suggested skills"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True,
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("student", "Student"), ("parent", "Parent")],
                        default="student",
                        max_length=10,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "interests",
                    models.TextField(blank=True, help_text="User's stated interests"),
                ),
                (
                    "career_aspiration",
                    models.CharField(
                        blank=True,
                        help_text="User's primary career goal",
                        max_length=255,
                    ),
                ),
                (
                    "skill_ratings",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Self-rated skills, e.g., {'python': 4}",
                    ),
                ),
                (
                    "answers_json",
                    models.JSONField(
                        default=dict, help_text="Raw answers from the assessment form"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Roadmap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="Personalized Career Roadmap", max_length=255
                    ),
                ),
                (
                    "milestones_json",
                    models.JSONField(
                        default=list,
                        help_text="List of milestones with details, e.g., [{'milestone': 'Learn X', ...}]",
                    ),
                ),
                (
                    "total_duration_estimate_months",
                    models.IntegerField(
                        default=0, help_text="Overall estimated duration in months"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "career",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="suggested_roadmaps",
                        to="api.career",
                    ),
                ),
                (
                    "user_assessment",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="personalized_roadmap",
                        to="api.assessment",
                    ),
                ),
            ],
        ),
    ]
